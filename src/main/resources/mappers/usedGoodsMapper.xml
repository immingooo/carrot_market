<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.carrotMarket.usedGoods.dao.UsedGoodsDAO">
	<insert id="insertUsedGoods" parameterType="map"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `used_goods`
		(
			`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{title}
			, #{category}
			, #{price}
			, #{content}
			, #{place}
			, NOW()
			, NOW()
		)
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<insert id="insertUsedGoodsImage" parameterType="map">
		INSERT INTO `used_goods_image`
		(
			`usedGoodsId`
			,`imageUrl`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		<foreach collection="imagePathList" item="item" separator=" , ">
		(
			#{id}
			, #{item}
			, NOW()
			, NOW()
		)
		</foreach>
	</insert>
	
	<select id="selectUsedGoodsByUsedGoodsId" parameterType="int" resultType="com.carrotMarket.usedGoods.model.UsedGoods">
		SELECT
			`id`
			,`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			, `viewCount`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods`
		WHERE
			`id` = #{usedGoodsId}
	</select>
	
	<select id="selectUsedGoodsImageListByUsedGoodsId" parameterType="int" resultType="com.carrotMarket.usedGoods.model.UsedGoodsImage">
		SELECT
			`id`
			,`usedGoodsId`
			,`imageUrl`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods_image`
		WHERE
			`usedGoodsId` = #{usedGoodsId}
	</select>
	
	<select id="selectUsedGoodsList" resultType="com.carrotMarket.usedGoods.model.UsedGoods">
		SELECT
			`id`
			,`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods`
		ORDER BY `id` DESC
	</select>
	
	<select id="selectUsedGoodsByUsedGoodsIdUserId" parameterType="map" resultType="com.carrotMarket.usedGoods.model.UsedGoods">
		SELECT
			`id`
			,`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods`
		WHERE
			`id` = #{usedGoodsId}
			AND `userId` = #{userId}
	</select>
	
	<select id="selectUsedGoodsListByKeyword" parameterType="string" resultType="com.carrotMarket.usedGoods.model.UsedGoods">
		SELECT
			`id`
			,`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			, `viewCount`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods`
		WHERE
			`title` LIKE CONCAT('%', #{keyword}, '%')
			OR `content` LIKE CONCAT('%', #{keyword}, '%')
			OR `place` LIKE CONCAT('%', #{keyword}, '%')
	</select>
	
	<select id="selectUsedGoodsListByCategory" parameterType="string" resultType="com.carrotMarket.usedGoods.model.UsedGoods">
		SELECT
			`id`
			,`userId`
			,`title`
			,`category`
			,`price`
			,`content`
			,`place`
			, `viewCount`
			,`createdAt`
			,`updatedAt`
		FROM
			`used_goods`
		WHERE
			`category` = #{category}
	</select>
	
	<update id="updateUsedGoodsByUserIdUsedGoodsId" parameterType="map">
		UPDATE `used_goods`
		SET
			`title` = #{title}
			,`category` = #{category}
			,`price` = #{price}
			,`content` = #{content}
			,`place` = #{place}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{usedGoodsId}
			AND `userId` = #{userId}
	</update>
	
	<delete id="deleteUsedGoodsImageByUsedGoodsId" parameterType="int">
		DELETE
		FROM
			`used_goods_image`
		WHERE
			`usedGoodsId` = #{usedGoodsId}
	</delete>
	
	<delete id="deleteUsedGoodsByUsedGoodsIdUserId" parameterType="map">
		DELETE
		FROM
			`used_goods`
		WHERE
			`id` = #{usedGoodsId}
			AND `userId` = #{userId}
	</delete>
	
	<update id="updateViewCount" parameterType="int">
		UPDATE `used_goods`
		SET
			`viewCount` = `viewCount`+1
		WHERE
			`id` = #{usedGoodsId}
	</update>
</mapper>